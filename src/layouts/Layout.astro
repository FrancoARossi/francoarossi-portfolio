---
import SpeedInsights from "@vercel/speed-insights/astro";
import BackgroundGradient from "../components/BackgroundGradient.astro";
import DotsParticles from "../components/DotsParticles.astro";

import "@fontsource/onest/200.css";
import "@fontsource/onest/400.css";
import "@fontsource/onest/700.css";
import "@fontsource/onest/800.css";
import BackgroundDotsPattern from "../components/BackgroundDotsPattern.astro";

type Props = {
  title: string;
  description: string;
};

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />

    <link
      rel="icon"
      type="image/x-icon"
      sizes="48x48"
      href="/images/favicon.ico"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/images/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/images/favicon-16x16.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/images/apple-touch-icon.png"
    />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="canonical" href="https://www.francorossi.dev" />

    <meta name="generator" content={Astro.generator} />
    <meta
      name="keywords"
      content="react, ruby, ruby on rails, postgresql, javascript, typescript, sidekiq, docker, rspec, html, css, full stack, fullstack, web, developer, engineer, tailwindcss, tailwind, next, nextjs, aws, solutions, architect, associate, agile, scrum, remote, work, hybrid"
    />

    <meta name="og:title" content={title} />
    <meta name="og:type" content="website" />
    <meta name="og:description" content={description} />
    <meta name="og:url" content="https://www.francorossi.dev" />
    <meta name="og:image" content="/images/seo_image.png" />
    <meta property="og:image:type" content="image/png" />
    <meta
      property="og:image:alt"
      content="Franco Rossi's Web Portfolio Header"
    />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="710" />
    <meta name="og:site_name" content={title} />
    <meta name="og:locale" content="en_US" />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:url" content="https://www.francorossi.dev" />
    <meta
      name="twitter:image"
      content="https://www.francorossi.dev/seo_image.png"
    />
    <meta
      name="twitter:image:alt"
      content="Franco Rossi's Web Portfolio Header"
    />

    <script type="application/ld+json" is:inline>
      {
        "@context": "https://schema.org/",
        "@type": "Person",
        "name": "Franco Rossi",
        "url": "https://www.francorossi.dev/",
        "image": "https://www.francorossi.dev/_astro/franco-rossi-no-bg.rZ8diU1d_ZoOFI8.webp",
        "sameAs": [
          "https://github.com/FrancoARossi",
          "https://www.linkedin.com/in/francoarossi/"
        ],
        "jobTitle": "Full Stack Software Developer"
      }
    </script>

    <title>{title}</title>
  </head>
  <body
    class="flex h-screen min-h-screen w-full justify-center overscroll-none bg-slate-950 px-5 sm:px-10"
  >
    <SpeedInsights />
    <!-- <BackgroundGradient /> -->
    <!-- <BackgroundDotsPattern /> -->
    <DotsParticles />

    <main
      class="z-10 flex max-w-screen-xl flex-col items-center gap-20 px-4 py-8 text-center lg:py-16"
    >
      <slot />
    </main>
  </body>
</html>
<style is:global>
  :root {
    color-scheme: light dark;
  }

  html {
    font-family: "Onest", sans-serif;
    color: #e4e4e7;
    scroll-behavior: smooth;
  }

  @media (prefers-reduced-motion: reduce) {
    html {
      scroll-behavior: auto;
    }
  }
</style>

<!-- <script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);
</script> -->
