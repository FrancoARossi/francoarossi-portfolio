<div
  id="scroll-reveal"
  class="invisible flex flex-col items-center justify-center gap-20"
>
  <slot />
</div>

<script>
  import { SECTIONS_IDS } from "@utils/constants";
  import type { SectionId } from "@utils/types";

  document.addEventListener("DOMContentLoaded", () => {
    const revealElement = (element: Element) => {
      if (element) {
        element.classList.remove("opacity-0", "translate-y-10", "invisible");
        element.classList.add("opacity-100", "translate-y-0");
      }
    };

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const wrapper = entry.target;
            revealElement(wrapper);
            observer.unobserve(wrapper);
          }
        });
      },
      {
        rootMargin: "0px",
        threshold: 0.1,
      }
    );

    const setupTargets = () => {
      const sectionsSelector = Object.values(SECTIONS_IDS)
        .map((id) => `#${id}`)
        .join(", ");

      document.querySelectorAll(sectionsSelector).forEach((section) => {
        const wrapper = document.createElement("div");
        wrapper.classList.add("scroll-reveal-wrapper");

        while (section.firstChild) {
          wrapper.appendChild(section.firstChild);
        }

        wrapper.classList.add(...section.classList);
        section.appendChild(wrapper);

        wrapper.classList.add(
          "translate-y-10",
          "opacity-0",
          "transition-all",
          "duration-500",
          "invisible"
        );

        observer.observe(wrapper);
      });
    };

    setupTargets();
    document.getElementById("scroll-reveal")?.classList.remove("invisible");
  });
</script>
